{"version":3,"sources":["Components/Card.js","Components/CardList.js","Components/SearchBox.js","Components/Scroll.js","Components/NewsCard.js","Components/Newscardlist.js","Containers/App.js","serviceWorker.js","index.js"],"names":["Card","props","className","name","symbol","price","CardList","stocks","prices","map","user","i","priceObject","filter","t","id","stock_id","key","short_name","SearchBox","searchfield","searchChange","onRouteChange","Navbar","bg","variant","Brand","href","Nav","Link","onClick","Form","inline","FormControl","type","placeholder","onChange","Scroll","style","overflowY","border","height","children","NewsCard","display","justifyContent","title","summary","Newscardlist","news","App","onSearchChange","event","setState","target","value","route","state","fetch","then","response","json","stockResponse","console","log","slice","ids","idsCount","length","count","substring","method","pricesResponse","data","items","result","this","filteredstocks","stock","toLowerCase","includes","filterednews","newss","Component","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.598a4439.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Card = (props) => {\r\n\r\n    return (\r\n        <div className='bg-light-green dib br3 pa3 ma2 grow bw2 shadow-5 tc'  >\r\n\r\n            <div>\r\n                <h2>{props.name}</h2>\r\n                <p>{props.symbol}</p>\r\n                <p>{props.price}</p>\r\n            </div>\r\n        </div>\r\n\r\n    );\r\n}\r\n\r\nexport default Card;","import React from 'react';\r\nimport Card from './Card';\r\n\r\n\r\nconst CardList = ({ stocks, prices }) => {\r\n    return (\r\n        <div>\r\n            {stocks.map((user, i) => {\r\n                let priceObject = prices.filter(t => t.id === stocks[i].stock_id)[0];\r\n                return <Card\r\n                    key={i}\r\n                    id={stocks[i].stock_id}\r\n                    name={stocks[i].name}\r\n                    symbol={stocks[i].short_name}\r\n                    price={priceObject == null ? 0 : priceObject.price}\r\n                />\r\n            })\r\n\r\n            }\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default CardList;","import React from 'react';\r\nimport { Navbar,Nav,Form,FormControl } from 'react-bootstrap';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\n\r\nconst SearchBox = ({ searchfield, searchChange,onRouteChange }) => {\r\n    return (\r\n        <div className='pa2 tc'>\r\n            <Navbar bg=\"#062456\" variant=\"dark\">\r\n                <Navbar.Brand href=\"#home\">Stocks UP</Navbar.Brand>\r\n                <Nav className=\"mr-auto\">\r\n                    \r\n                    <Nav.Link href=\"#\" onClick={()=>onRouteChange('Prices')} >Prices</Nav.Link>\r\n                    <Nav.Link href=\"#\" onClick={()=>onRouteChange('News')} >News</Nav.Link>\r\n                </Nav>\r\n                <Form inline>\r\n                    <FormControl type=\"text\" placeholder=\"Search Stocks\" className=\"mr-sm-2 p-3\" onChange={searchChange} />\r\n                    \r\n                </Form>\r\n            </Navbar>\r\n     \r\n        </div>\r\n\r\n    );\r\n}\r\n\r\nexport default SearchBox;","import React from 'react';\r\n\r\nconst Scroll = (props) => {\r\n    return (\r\n        <div style={{ overflowY: 'scroll', border: '5px soid black', height: '600px' }}>\r\n            {props.children}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Scroll;","import React from 'react';\r\n\r\nconst NewsCard = (props) => {\r\n\r\n    return (\r\n        <div className='bg-lightest-blue dib br3 pa3 ma3 grow bw2 shadow-5 tc' style={{display:'flex', justifyContent: 'center' }} >\r\n\r\n            <div>\r\n                <h2>{props.title}</h2>\r\n            \r\n                <p className='pa2 ma3'>{props.summary}</p>\r\n                \r\n            </div>\r\n        </div>\r\n\r\n    );\r\n}\r\n\r\nexport default NewsCard;","import React from 'react';\r\nimport NewsCard from './NewsCard';\r\n\r\nconst Newscardlist = ({news}) => {\r\n    return (\r\n        <div>\r\n            {news.map((user, i) => {\r\n              \r\n                return <NewsCard\r\n                    key={i}\r\n                    id={news[i].id}\r\n                    title={news[i].title}\r\n                    summary={news[i].summary}\r\n                />\r\n            })\r\n\r\n            }\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Newscardlist;\r\n","import React, { Component } from 'react';\r\nimport CardList from '../Components/CardList';\r\nimport SearchBox from '../Components/SearchBox.js';\r\nimport './App.css';\r\nimport Scroll from '../Components/Scroll';\r\nimport Newscardlist from '../Components/Newscardlist';\r\n//const cors = require('cors');\r\n\r\n\r\nclass App extends Component {\r\n    constructor() {\r\n        super()\r\n        this.state = {\r\n            stocks: [],\r\n            searchfield: '',\r\n            prices: [],\r\n            route: 'Prices',\r\n            news: []\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        //  fetch('https://jsonplaceholder.typicode.com/users').then(response => response.json()).then(data => this.setState({ stocks: data }))\r\n\r\n        // fetch('https://jsonplaceholder.typicode.com/comments').then(response => response.json())\r\n        //     .then(data => {\r\n        //         console.log('data test::', data);\r\n        //         this.setState({ news: data });\r\n        //     }\r\n\r\n        //     )\r\n\r\n        fetch('https://fcsapi.com/api-v2/stock/list?country=United-states&access_key=FT8DEOmaTBENI5Ai1plueQBn0DmBI7CVz19FAonyUjuurONg8y')\r\n            .then(response => response.json())\r\n            .then(stockResponse => {\r\n                console.log(stockResponse);\r\n                this.setState({ stocks: stockResponse.response.slice(0, 1000) });\r\n\r\n                let ids = '';\r\n                const idsCount = this.state.stocks.length;\r\n\r\n                for (let count = 0; count <= idsCount - 1; count++) {\r\n                    let id = this.state.stocks[count].stock_id;\r\n                    ids = ids + ',' + id;\r\n\r\n                }\r\n\r\n                ids = ids.substring(1);\r\n                console.log(ids);\r\n\r\n                fetch(`https://fcsapi.com/api-v2/stock/latest?id=${ids}&access_key=FT8DEOmaTBENI5Ai1plueQBn0DmBI7CVz19FAonyUjuurONg8y`, {\r\n                    method: 'GET'\r\n                })\r\n                    .then(response => response.json())\r\n                    .then(pricesResponse => {\r\n                        console.log(pricesResponse);\r\n                        this.setState({ prices: pricesResponse.response });\r\n                    });\r\n\r\n            });\r\n\r\n\r\n        fetch(\"https://apidojo-yahoo-finance-v1.p.rapidapi.com/news/list?category=generalnews&region=US\", {\r\n            \"method\": \"GET\",\r\n            \"headers\": {\r\n                \"x-rapidapi-host\": \"apidojo-yahoo-finance-v1.p.rapidapi.com\",\r\n                \"x-rapidapi-key\": \"40f0e74d83mshd5fd7a4a963ac98p1d4f6cjsn1c7d85b1789e\"\r\n            }\r\n        })\r\n            .then(response => response.json())\r\n            .then(data => {\r\n                console.log('data:::', data);\r\n                this.setState({ news: data.items.result });\r\n            }\r\n\r\n\r\n            )\r\n\r\n\r\n\r\n    }\r\n\r\n\r\n    onSearchChange = (event) => {\r\n        this.setState({ searchfield: event.target.value });\r\n    }\r\n\r\n    onRouteChange = (route) => {\r\n        this.setState({searchfield:''});\r\n        this.setState({ route: route });\r\n    }\r\n\r\n\r\n    render() {\r\n        const { stocks, searchfield, prices,news } = this.state;\r\n\r\n        const filteredstocks = this.state.stocks.filter(stock => {\r\n            return stock.name.toLowerCase().includes(searchfield.toLowerCase());\r\n        })\r\n\r\n        console.log(this.state.news);\r\n        const filterednews = this.state.news.filter(newss => {\r\n            return newss.summary.toLowerCase().includes(searchfield.toLowerCase());\r\n        })\r\n\r\n\r\n\r\n\r\n\r\n        return (\r\n            <div>\r\n                <h1 className='tc'>STOCKS UP</h1>\r\n                <SearchBox searchChange={this.onSearchChange} onRouteChange={this.onRouteChange} />\r\n                {this.state.route === 'Prices' && stocks.length\r\n                    ? <div >\r\n                        <Scroll>\r\n                           \r\n                            <CardList stocks={filteredstocks} prices={prices} />\r\n                        </Scroll>\r\n                    </div>\r\n                    : (this.state.route === 'News' && news.length\r\n                        ?\r\n                        <div >\r\n                            <Scroll>\r\n                                \r\n                                <Newscardlist news={filterednews} />\r\n\r\n                            </Scroll>\r\n                        </div>\r\n                        : <h1>Loading</h1>)\r\n\r\n\r\n                }\r\n\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport 'tachyons';\nimport App from './Containers/App.js';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n "],"sourceRoot":""}